import streamlit as st
import pandas as pd
import numpy as np
import altair as alt

st.title("ğŸ§  Trend Radar - ÃœrÃ¼n Performans Analizi")

# Veri yÃ¼kle
df = pd.read_csv("trend_urunler.csv")

# Kategori seÃ§imi
kategori_secimi = st.selectbox("Kategori SeÃ§in:", options=df["Kategori"].unique())

# Kategoriye gÃ¶re filtrele
df_kategori = df[df["Kategori"] == kategori_secimi].sort_values(by="Trend_Skoru", ascending=False)

# Trend skoru eÅŸiÄŸi
trend_esik = st.slider("Trend Skoru EÅŸiÄŸi", min_value=-2.0, max_value=2.0, value=0.5, step=0.1)

# Trend Ã¼rÃ¼nler
df_kategori["Trend"] = df_kategori["Trend_Skoru"] >= trend_esik
trend_urunler = df_kategori[df_kategori["Trend"]]

# Fonksiyon: ÃœrÃ¼n performansÄ±nÄ± Ã¶zetleyen yapay zeka metni Ã¼ret
@st.cache_data
def performans_ozeti(row):
    yorum = []
    if row["CTR"] > 0.9:
        yorum.append("yÃ¼ksek tÄ±klanma oranÄ±")
    if row["CR"] > 0.05:
        yorum.append("iyi dÃ¶nÃ¼ÅŸÃ¼m oranÄ±")
    if row["STR"] > 0.5:
        yorum.append("stok dÃ¶nÃ¼ÅŸÃ¼m baÅŸarÄ±sÄ±")
    if row["Trend_Skoru"] > df_kategori["Trend_Skoru"].mean():
        yorum.append("kategori ortalamasÄ±nÄ±n Ã¼zerinde performans")

    if yorum:
        return f"Bu Ã¼rÃ¼n, {', '.join(yorum)} ile Ã¶ne Ã§Ä±kÄ±yor. Kampanya veya push bildirim desteÄŸiyle daha fazla satÄ±ÅŸ potansiyeline sahip."
    else:
        return "ÃœrÃ¼n performansÄ± ortalama seviyede. Kategori iÃ§inde desteklenirse Ã¶ne Ã§Ä±kabilir."

# ÃœrÃ¼nleri gÃ¶ster
st.subheader("ğŸ”¥ Trend ÃœrÃ¼nler")
for _, row in trend_urunler.iterrows():
    with st.container():
        cols = st.columns([1, 3])
        with cols[0]:
            st.image(row["Gorsel"], width=100)
        with cols[1]:
            st.markdown(f"**{row['Urun_Adi']}**")
            st.caption(f"{row['Aciklama']}")
            st.write(f"Trend Skoru: `{row['Trend_Skoru']:.2f}`")
            with st.expander("ğŸ§  Yapay Zeka Yorumu"):
                st.info(performans_ozeti(row))

# Grafik
st.subheader("ğŸ“Š Trend Skoru GrafiÄŸi")
grafik = alt.Chart(df_kategori).mark_bar().encode(
    x=alt.X("Urun_Adi", sort="-y"),
    y="Trend_Skoru",
    color=alt.condition(
        f"datum.Trend_Skoru >= {trend_esik}",
        alt.value("green"),
        alt.value("lightgray")
    ),
    tooltip=["Urun_Adi", "Trend_Skoru"]
).properties(width=700)

st.altair_chart(grafik, use_container_width=True)

st.info("Bu prototipte sahte veriler kullanÄ±lmaktadÄ±r. GerÃ§ek veri ile entegre edilebilir.")
